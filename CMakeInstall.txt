if(INSTALL_HERE) 
  set(INSTALL_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/lib")
  set(PROJECT_PUBLIC_HEADER_DESTINATION "${CMAKE_CURRENT_SOURCE_DIR}/lib/include")
else()
  set(INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}/lib")
  set(PROJECT_PUBLIC_HEADER_DESTINATION "${CMAKE_INSTALL_PREFIX}/include/${PROJECT_NAME}")
endif()

set(INSTALL_TARGETS ${STATIC_PROJECT})
add_dependencies( ${STATIC_PROJECT} UtilsStatic QuarticStatic )
if(BUILD_SHARED)
  add_dependencies( ${STATIC_PROJECT} UtilsStatic QuarticStatic )
  set(INSTALL_TARGETS ${INSTALL_TARGETS} ${DYNAMIC_PROJECT})
endif()

# Installing Dependencies
install(
  TARGETS ${INSTALL_TARGETS} UtilsStatic QuarticStatic
  EXPORT ClothoidsTargets
  RUNTIME DESTINATION "${INSTALL_PREFIX}/bin"
  ARCHIVE DESTINATION "${INSTALL_PREFIX}/lib"
  LIBRARY DESTINATION "${INSTALL_PREFIX}/dll"
  PUBLIC_HEADER DESTINATION "${PROJECT_PUBLIC_HEADER_DESTINATION}"
)

# FIXME: The header structure forces me to do this... And this will create issues!
install(FILES "${Clothoids_DIR}/Clothoids.hh" DESTINATION "${PROJECT_PUBLIC_HEADER_DESTINATION}")
install(DIRECTORY "${Clothoids_DIR}/Clothoids" DESTINATION "${PROJECT_PUBLIC_HEADER_DESTINATION}")

# FIXME: We are forced to do so for how the headers are included in Utils...
# but this is just another symptom that something is wrong in header handling
# **Quartic** headers are handled correctly though...
#----------------------------------------
# added as suggested by Martin Gaudreault
if(INSTALL_HERE)
  install(
    DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/submodules/Utils/lib/" 
    DESTINATION "${CMAKE_CURRENT_SOURCE_DIR}/lib3rd/" 
    #FILES_MATCHING PATTERN "*.h*"
  )
  install(
    DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/submodules/quarticRootsFlocke/lib/" 
    DESTINATION "${CMAKE_CURRENT_SOURCE_DIR}/lib3rd/" 
    #FILES_MATCHING PATTERN "*.h*"
  )
endif()
#----------------------------------------

install(
  EXPORT ClothoidsTargets
  FILE ClothoidsTargets.cmake 
  DESTINATION lib/cmake/Clothoids
)

# CPACK INSTALL TARGETS (Leaving almost as it is...)

set(INCLUDE_INSTALL_DIR include/ CACHE STRING "Include install directory")
set(LIBRARIES_INSTALL_DIR lib/ CACHE STRING "Libraries install directory")
get_target_property(CLOTHOIDS_LIB_OUTPUT_NAME ${STATIC_PROJECT} OUTPUT_NAME)
if(UNIX)
  set(CLOTHOIDS_LIB_PREFIX lib)
  set(CLOTHOIDS_LIB_SUFFIX .a)
else()
  set(CLOTHOIDS_LIB_PREFIX "")
  set(CLOTHOIDS_LIB_SUFFIX .lib)
endif()
set(CLOTHOIDS_LIB_NAME "${CLOTHOIDS_LIB_PREFIX}${CLOTHOIDS_LIB_OUTPUT_NAME}${CLOTHOIDS_LIB_SUFFIX}")
set(LIBRARIES lib/${CLOTHOIDS_LIB_NAME} CACHE STRING "Libraries directory")

include(CMakePackageConfigHelpers)
configure_package_config_file(
  ClothoidsConfig.cmake.in 
  "${CMAKE_CURRENT_BINARY_DIR}/ClothoidsConfig.cmake"
  INSTALL_DESTINATION "lib/Clothoids/cmake"
  PATH_VARS INCLUDE_INSTALL_DIR LIBRARIES_INSTALL_DIR LIBRARIES
)
write_basic_package_version_file(
  "ClothoidsConfigVersion.cmake"
  COMPATIBILITY SameMajorVersion
)
install(
  FILES 
  ${CMAKE_CURRENT_BINARY_DIR}/ClothoidsConfig.cmake
  ${CMAKE_CURRENT_BINARY_DIR}/ClothoidsConfigVersion.cmake
  DESTINATION lib/cmake/Clothoids
)
